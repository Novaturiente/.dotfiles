pacman -Q | rg "one"
hyprpanel toggleWindow audiomenu
vi .config/hypr/hyprpanel_config.json
sudo pacman -Ss hyprpanel
paru -Ss hyprpanel
aws-cli
pacman -Q | rg "aws"
pactree -r aws-sdk-cpp-core
pactree aws-sdk-cpp-core
pactree nix
hyprpanel toggle
hyprpanel --help
killall hyprpanel
hyprpanel -q
hyprpanel
upower
upower --help
upower -e
upower -i
libgtop
flatpak uninstall mullvad
flatpak uninstall --unused
pactree tmux
wpaperd
cd .config/rofi
rm wifi-menu.rasi wifi_menu.sh
vi hypr/configs/binds.conf
mc
PS1='%n@%m:%~%# '
cd .config/waybar
flatpak search gnome-boxes
flatpak search gnome boxes
flatpak search boxes
vi Modules
cd .config/hypr
mv ~/Pictures/satoru-gojo-jjk-3840x2160-19527.png pain.jpg
mv pain.jpg pain.png
vi hyprlock.conf
ollama pull granite3.2-vision
rm -rf .*
rm -rf main.py README.md pyproject.toml
s
mkdir image_recognizer
uv add httpx ollama
ollama pull gemma3
cd image_recognizer
ollama pull qwen2.5vl:3b
uv run main.py
pacman -Ss docker-desktop
pacman -Ss docker desktop
pacman -Ss docker
cd Code/temp
wget https://download.docker.com/linux/static/stable/x86_64/docker-28.3.2.tgz -qO- | tar xvfz - docker/docker --strip-components=1\
mv ./docker /usr/local/bin
pacman -Ss dokcer plugin
pacman -Ss docker plugin
pacman -Ss docker-model
paru -Ss docker-model
paru -Ss docker plugin
sudo touch /usr/sbin/test
sudo touch /usr/local/sbin/test
sudo touch /usr/local/bin/test
sudo rm /usr/local/bin/test
sudo rm /usr/local/sbin/test
sudo mv docker /usr/local/bin
docker 
docker
docker model
docker run 
docker run -i hello-world
sudo rm /usr/local/bin/docker
paru -Sy
paru -Ss docker desktop
 gpg --generate-key
pass init A604C00DA4B0E225CB88CFB562439BA26F45CDCA
pacman -Q | rg "docker"
paru -Ss dxvk
which Hyprland
paru -Ss hyprland
lazygit
which go
wget https://dl.photoprism.app/docker/compose.yaml
mv compose.yaml photoprism.yaml
sudo fallocate -l 8G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
swapon --show
free -h
sudo -e /etc/fstab
cd Downloads
mv *.jpg ~/Pictures/store
mv *.mp4 ~/Pictures/store
ls ~/Pictures/storage
ls ~/Pictures/store
mkdir Photos
cd photos
mkdir originals
mkdir storage
mv ~/Pictures/store/* originals
ls originals
cd ~/Pictures
ls storage
ls store
rm -rf storage store
cd Pictures
cd Photos
vi photoprism.yaml
ip -a
ls ~/Photos/storage
rsync -avz sshd@192.168.83.195:/sdcard/DCIM/Camera ~/Photos/originals
ping 192.168.83.195
rsync -avz -e "ssh -p 1024" sshd@192.168.83.195:/sdcard/DCIM/Camera ~/Photos/originals
ssh sshd@192.168.83.195 -p 1024
ssh sshd@192.168.83.195 -p 2222
rsync -avz -e "ssh -p 2222" sshd@192.168.83.195:/sdcard/DCIM/Camera ~/Photos/originals
ls ~/Photos/originals
ls ~/Photos/originals/Camera
tailscaled &
systemctl --user enable --now tailscaled
sudo pacman -Ss tailscale
paru -Ss tailscale
nix run home-manager/master -- init
sudo nix run home-manager/master -- init
nano 
which home-manager
nix profile install nixpkgs#extras
sudo nix profile install nixpkgs#extras
sudo nix profile install nixpkgs#extras --flaes
sudo nix profile install nixpkgs#extras --flakes
sudo nix profile install --flakes nixpkgs#extras 
vi
homectl
which homectl
nix flake update
sudo nix flake update
sudo nix build .#extras
cp flake.nix flake.nix.back
ls result
ls result/bin
rm -rf result
brave
which brave
nix run . switch --flake
nix run . switch 
sudo nix run . switch 
rm -rf flake.nix
cp flake.nix.back flake.nix
vi ~/.local/share/fish/fish_history.s66u7o
ls ~/.local/share/fish
ls ../nova/
ls ../nova/.local
ls ../nova/.local/share
ls ../nova/.local/share/fish
ls ../nova/.local/share/fish/fish_history.s66u7o
cat ../nova/.local/share/fish/fish_history.s66u7o
nix profile list
sudo nix profile list
sudo nix profile upgrade .#extras
sudo nix profile upgrade -all .#extras
sudo nix profile upgrade
sudo nix profile history
sudo pacman -Ss nix
systemctl status nix
rm -rf home.nix
nix profile install .#extras
ls podman
rm -rf podman/database
sudo rm -rf podman/database
rm -rf flake.nix.back
mkdir services
cd services
vi tailscale.nix
vi setup-services.nix
nix profile upgrade --all
sudo systemctl statust tailscaled
journalctl -xeu tailscaled.service
journalctl -xeu tailscaled.service >> test.txt
vi test.txt
vi services/tailscale.nix
sudo nix profile upgrade --all
sudo setup-services
sudo systemctl enable tailscaled
sudo tailscale ip
sudo tailscale ping 
sudo tailscale ping 100.110.110.111
sudo tailscale dns
sudo tailscale down
sudo tailscale status
ssh sshd@100.110.110.111 -p 2222
rsync -avz -e "ssh -p 2222" sshd@100.110.110.111:/sdcard/DCIM/Camera ~/Photos/originals
podman-compose -f photoprism.yaml up -d
podman-compose -f photoprism.yaml down
mkdir immich
wget -O docker-compose.yml https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
wget -O .env https://github.com/immich-app/immich/releases/latest/download/example.env
mv docker-compose.yml podman-compose.yml
rm -rf ~/Photos/storage/*
ip a
podman ps >> t
vi t
rm -rf ~/Photos/*
sudo rm -rf ~/Photos/*
ls ~/Pictures
ls ~/Photos
wget https://github.com/immich-app/immich/releases/latest/download/hwaccel.ml.yml
vi hwaccel.ml.yml
podman logs immich_machine_learning
ls /usr/share/containers/oci
podman run --rm --hooks-dir=/usr/share/containers/oci/hooks.d \\
  --security-opt=label=disable \\
  --device=/dev/nvidia0 --device=/dev/nvidiactl --device=/dev/nvidia-uvm \\
  nvidia/cuda:12.2.0-base-ubuntu20.04 nvidia-smi
ls /usr/share/containers/oci/hooks.d
sudo pacman -Ss container-tooklit
sudo pacman -Ss container tooklit
podman run --rm \\
  --hooks-dir=/usr/share/containers/oci/hooks.d \\
  --security-opt=label=disable \\
  --device=/dev/nvidia0 \\
  --device=/dev/nvidiactl \\
  --device=/dev/nvidia-uvm \\
  nvcr.io/nvidia/cuda:12.2.0-runtime-ubuntu20.04 nvidia-smi
sudo pacman -Ss nvidia toolkit
ollama run gemma3
ollama down
ollamadown
vi ../ollama.yml
podman log -f immich_machine_learning
wget https://github.com/immich-app/immich/releases/latest/download/hwaccel.transcoding.yml
wget -O docker-compose.yml https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml\
\
\

vi ../ollama-ui.yml
vi .env
vi hwaccel.transcoding.yml
rm docker-compose.yml
rm hwaccel.ml.yml
rm t
celar
podman-compose dow
vi podman-compose.yml
podman logs -f immich_machine_learning
podman logs -f immich_server
ollamaup
ollama list
ollama rm qwen2.5vl:3b
sudo pacman -Ss vk3d
sudo pacman -Ss vulkan-headers
sudo pacman -Ss vulkan-validation-layers
sudo pacman -Ss opencl-nvidia
sudo pacman -Ss ocl-icd
sudo pacman -Ss gst-plugins-good
sudo pacman -Ss lib32-libldap
sudo pacman -Ss lib32-gcc-libs
sudo pacman -Ss lib32-ocl-icd
sudo pacman -Ss gamemode
sudo pacman -Ss dxvk
sudo pacman -Ss litrus
sudo pacman -Ss litris
sudo pacman -Ss lutris
sudo nvidia-settings --assign=GPUPowerMizerMode=1
nvidia-settings --help
sudo -E nvidia-settings --assign=GPUPowerMizerMode=1
nvidia-settings --query all | grep -A 10 "GPU 0"
sudo nvidia-settings --query all | grep -A 10 "GPU 0"
sudo -E nvidia-settings --query all | grep -A 10 "GPU 0"
nvidia-settings -q screens -q gpus -q framelocks -q fans -q thermalsensors -q svps -q dpys
nvidia-settings -a "[gpu:0]/GPUPowerMizerMode=1"\

sudo pacman -Ss vkd3d
watch -t 10 nvidia-smi
watch  nvidia-smi
 cd nix-profile
ls proton/ge-proton
cat proton/ge-proton/version
mv wine/GE-Proton10-10 proton
ls proton
cd .local/share/lutris/runtime
cd runners
cd proton/GE-Proton10-10
cp user_settings.sample.py user_settings.py
vi user_settings.sample.py
vi user_settings.py
gamescope --backend sdl -f -W 1920 -H 1080 -- gamemoderun lutris-wrapper: Horizon Zero Dawn
export SDL_VIDEODRIVER=wayland
export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/nvidia_icd.json
export SDL_VIDEODRIVER=x11
paru -Ss vulkan-wayland
paru -Ss vulkan wayland
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- gamemoderun lutris-wrapper: Horizon Zero Dawn
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 \\
  --hdr-enabled --hdr-debug-force-output \\
  --force-grab-cursor -- \\
  gamemoderun /home/nova/.local/share/lutris/runtime/umu/umu-run \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered/tools
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered/tools/bin
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered/tools/bin/x64
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered/tools/bin/x64/D3D12
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered/uds
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered/uds/steam
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered/CRS
ls ~/Games/gog/horizon-zero-dawn/drive_c/Horizon\ -\ Zero\ Dawn\ Remastered/_v1.0.38
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun /home/nova/.local/share/lutris/runtime/umu/umu-run \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/_v1.0.38/HorizonZeroDawnRemastered.exe"
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun /home/nova/.local/share/lutris/runners/proton/ge-proton/proton \\
"/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun /home/nova/.local/share/lutris/runners/proton/ge-proton/proton run\\
"/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun ~/.local/share/lutris/runners/proton/ge-proton/proton run \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"\

WINEPREFIX="/home/nova/Games/gog/horizon-zero-dawn" \\
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun wine \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"
# Steam Proton versions\
ls ~/.steam/steam/steamapps/common/ | grep -i proton\
\
# Proton-GE versions  \
ls ~/.steam/steam/compatibilitytools.d/ | grep -i proton\
\
# System-wide installations\
ls /usr/share/steam/compatibilitytools.d/ 2>/dev/null || echo "No system Proton found"
ls .local/share/lutris/runners/proton
# Set up the environment for better compatibility\
export WINEPREFIX="/home/nova/Games/gog/horizon-zero-dawn"\
export WINEDLLOVERRIDES="dxvk_config=n,b"\
export DXVK_HUD="fps,memory,gpuload"  # Optional: show performance overlay\
export PROTON_NO_ESYNC=1  # Try if you have audio issues\
export PROTON_NO_FSYNC=1  # Try if you have sync issues\
\
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun ~/.local/share/lutris/runners/proton/GE-Proton10-10/proton run \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"
export WINEPREFIX="/home/nova/Games/gog/horizon-zero-dawn"\
export WINEDLLOVERRIDES="dxvk_config=n,b"\
export DXVK_HUD="fps,memory,gpuload"  # Optional: show performance overlay\
export PROTON_NO_ESYNC=1  # Try if you have audio issues\
export PROTON_NO_FSYNC=1  # Try if you have sync issues\
\
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun ~/.local/share/lutris/runners/proton/GE-Proton10-10/proton run \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"
WINEPREFIX="/home/nova/Games/gog/horizon-zero-dawn" \\
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun ~/.local/share/lutris/runners/proton/GE-Proton10-10/proton run \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"
export WINEPREFIX="/home/nova/Games/gog/horizon-zero-dawn"\
export STEAM_COMPAT_DATA_PATH="/home/nova/Games/gog/horizon-zero-dawn"\
export STEAM_COMPAT_CLIENT_INSTALL_PATH="/home/nova/Games/gog/horizon-zero-dawn"\
\
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun lutris-wrapper: Horizon Zero Dawn
lutris-wapper
lutris-wrapper: Horizon Zero Dawn
export WINEPREFIX="/home/nova/Games/gog/horizon-zero-dawn"\
export STEAM_COMPAT_DATA_PATH="/home/nova/Games/gog/horizon-zero-dawn"\
export STEAM_COMPAT_CLIENT_INSTALL_PATH="/home/nova/Games/gog/horizon-zero-dawn"\
\
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun ~/.local/share/lutris/runners/proton/GE-Proton10-10/proton run \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"
chmod +x start.sh
gamescope --backend
gamescope --backend list
gamescope --backend --help
gamescope --help
echo $XDG_SESSION_TYPE\
echo $WAYLAND_DISPLAY\

groups $USER | grep input
gamescope --help 
rm -r .local/share/lutris/runtime/umu
gamescope --prefer-vk-device 10de:25a9 --backend sdl -f -W 1920 -H 1080 -- \\
  gamemoderun /home/nova/.local/share/lutris/runtime/umu/umu-run \\
  "/home/nova/Games/gog/horizon-zero-dawn/drive_c/Horizon - Zero Dawn Remastered/HorizonZeroDawnRemastered.exe"\

lutrs
rm -r .local/share/lutris/runners/proton
rm -rf .local/share/lutris/runners/proton
killall valent
kdeconnect
kdeconnect-settings
keconnect-settings
which kdeconnected
which kdeconnectd
/nix/var/nix/profiles/default/bin/kdeconnect-cli
/nix/var/nix/profiles/default/bin/kdeconnectd
/nix/var/nix/profiles/default/bin/kdeconnect-cli -l
/nix/var/nix/profiles/default/bin/kdeconnect-settings
/nix/var/nix/profiles/default/bin/kdeconnect-app
rm -rf .local/share/lutris
/nix/var/nix/profiles/default/bin/kdeconnectd &
killall lutris
mkdir .local/share/lutris/runners/proton
./start.sh
uname -r
grep CONFIG_NTSYNC /boot/config-$(uname -r)
sudo modprobe ntsync
sudo modprobe ntsyncacasc
lsmod | grep ntsync
vi start.sh
mkdir package_manager
cp /system.yaml ./packages
mv update update.sh
chmod +x update.sh
cd Code/package_manager
pacman -Q linux cpio
vi system
./update.sh
chmod +x new_update.sh
./new_update.sh
vi new_update.sh
cp new_update.sh update
ls system
cat system
cp -r package_manager ~/.dotfiles
vi .gitignore
vi update
vi package_manager/update
pacman -Qd
pacman -Qdt
pacman -Q --help
pacman -Qe
l
cp packages system
vi package_manager/update.sh
vi update.sh
python update.py
pacman -Q | rg "python"
paru -Ss python adblock
gamemoded -s
nvtop
fastfetch
sudo -e /etc/tlp.conf
sudo nvidia-settings
cat /sys/block/nvme0n1/queue/scheduler
grep . /sys/devices/system/cpu/vulnerabilities/*
sudo -e /etc/X11/xorg.conf.d/20-nvidia.conf
vi gaming
chmod +x gaming
./gaming
sudo nvidia-smi -pl 35
nvidia-smi
nvidia-smi -q | grep -A 20 "Clocks Throttle Reasons"
watch -n 1 'nvidia-smi --query-gpu=timestamp,temperature.gpu,clocks.gr,clocks.mem,power.draw,utilization.gpu,memory.used,memory.total --format=csv'
watch -n 1 'sensors | grep -E "Package|Core"'
lutris
sudo -E nvidia-settings
lsmod | grep -i ntsync || sudo modprobe ntsync
sudo -e /etc/modules-load.d/ntsync.conf
sudo mkinitcpio -p
sudo mkinitcpio -P
cd system/etc
mkdir modules-load
cp /etc/modules-load.d/ntsync.conf modprobe.d
ls modprobe.d
mv modprobe.d/ntsync.conf modules-load
ls modules-load
ls /etc/modules-load.d
ls systemd
ls systemd/system
ls systemd/system/set-deep-sleep.service
sudo -e /etc/sysctl.d/99-performance.conf
mkdir sysctl.d
cp /etc/sysctl.d/99-performance.conf sysctl.d
ls sysctl.d
cd .dotfiles/package_manager
rm \ 
cd package_manager
rm \\ 
\:q
sudo rm test.conf
rm existing
rm system
vi packages
vi update.py
sudo akshara update
lsmod | grep -i ntsync
ncdu
podman imageas
podman rmi c9d19687aa75 2664f46b9de0 b33470986f3f
vi .config/hypr/configs/animations.conf
vi mac.yaml
podman-compose -f mac.yaml up
podman ps
podman-compose -f mac.yaml down
vi immich/podman-compose.yml
podman images
podman rmi dae0c92b7b63 d21f6e2bc79e
podman volumes
podman volume ls
podman-compose up -d
sudo systemctl start tailscale
nixupdate
setup-services
tailscale up
cd .dotfiles/podman
cd immich
podman-compose up down
podman-compose down
cd .dotfiles/nix-profile
vi packages.nix
sudo nix profile install .#extras
home-manager 
sudo nix run github:nix-community/home-manager -- init --switch
home-manager --init --switch
home-manager -- init --switch
sudo rm -rf /root/.config/home-manager  # Remove root's config
sudo rm -rf /root/.config/home-manager
sudo chown -R $USER /nix/var/nix/{db,profiles,daemon-socket}
sudo chown -R $USER /nix/var/nix/db/big-lock
ls /nix/var/nix/db/
la /nix/var/nix/db/
sudo rm -rf /nix
ls /nix
vi .dotfiles/nix-profile/flake.nix
home-manager
rm -rf .nix-profile
nix run github:nix-community/home-manager -- init --switch
vi .zshrc
bsh
la .local/state/nix
la .local/state/nix/profiles
vi .dotfiles/nix-profile/packages.nix
cp .dotfiles/nix-profile/packages.nix .config/home-manager
vi ~/.dotfiles/nix-profile/flake.nix
home-manager switch --flake
home-manager switch --flake .
vi home.nix
ls /nix/var/nix/profiles/default/share/dbus-1/services/org.kde.kdeconnect.service\

ls /nix/var/nix/profiles/per-user
ls /nix/var/nix/profiles/default/share/dbus-1/services/org.kde.kdeconnect.service
ls .nix-profile/share/dbus-1/services
ls .nix-profile/share/dbus-1/services/org.kde.kdeconnect.service
mkdir -p ~/.local/share/dbus-1/services/
ln -s ~/.nix-profile/share/dbus-1/services/org.kde.kdeconnect.service ~/.local/share/dbus-1/services/
ls .local/share/dbus-1/services
systemctl --user restart dbus
journalctl --user -u dbus -f
QT_LOGGING_RULES="*.debug=true" QT_QPA_PLATFORM=xcb kdeconnect-app
kdeconnect-app
sudo pacman -Q | rg  "mesa"
sudo pacman -Q | rg  "libglvnd"
QT_QPA_PLATFORM=xcb kdeconnect-app
nix-shell -p kdeconnect --run "env LIBGL_DRIVERS_PATH=/usr/lib/dri QT_QPA_PLATFORM=xcb kdeconnect-app"
nix-shell -p plasma5Packages.kdeconnect-kde --run "env LIBGL_DRIVERS_PATH=/usr/lib/dri QT_QPA_PLATFORM=xcb kdeconnect-app"
glxinfo | grep "OpenGL version"
glxinfo | grep "FBConfig"
QT_XCB_GL_INTEGRATION=xcb_egl \\
LIBGL_DRIVERS_PATH=/usr/lib/dri \\
QT_LOGGING_RULES="qt.qpa.gl=true" \\
kdeconnect-app
LIBGL_ALWAYS_SOFTWARE=1 \\
QT_QPA_PLATFORM=xcb \\
kdeconnect-app
kdeconnectd
QT_QUICK_BACKEND=software \\
QT_QPA_PLATFORM=xcb \\
QT_XCB_FORCE_SOFTWARE_OPENGL=1 \\
kdeconnect-app
sudo -e /system.yaml\ 
mv .config/home-manager .dotfiles/nova/.config
ls .config/home-manager
vi .bash_history
rm -rf nix-profile
git push
vi .config/hypr/configs/autostart.conf
sudo pacman -Ss dolphin
ls ~/.config/menus/applications.menu
ls ~/.config/menus/applications-merged
ls ~/.config/menus/
pacman -Q xdg-desktop-portal xdg-utils\

sudo update-mime-database /usr/share/mime\

sudo update-mime-database /usr/share/mime
kbuildsycoca5
rm ~/.cache/menus/*\
kbuildsycoca5
ls .cache/menus
ls .cache/menus/
update-mime-database /usr/share/mime\

sudo -e
sudo su
update-desktop-database ~/.local/share/applications
kbuildsycoca5 --noincremental
vi .config/menus/applications.menu
rm ~/.config/menus/applications.menu
cat > ~/.config/menus/applications.menu << 'EOF'\
<?xml version="1.0" encoding="UTF-8"?>\
<!DOCTYPE Menu PUBLIC "-//freedesktop//DTD Menu 1.0//EN"\
  "http://www.freedesktop.org/standards/menu-spec/1.0/menu.dtd">\
<Menu>\
  <Name>Applications</Name>\
  <DefaultAppDirs/>\
  <DefaultDirectoryDirs/>\
  <DefaultMergeDirs/>\
  <Include>\
    <All/>\
  </Include>\
</Menu>\
EOF
rm -rf .config/menus/applications-merged
ls .config/menus
mv .config/menus .dotfiles/nova/.config
vi .config/mimeapps.list
ls /usr/share/applications/ | grep -i ghostty
dolphin
mv .config/kdeglobals .dotfiles/nova/.config
stow -t ~ nova --adopt
vi .config/kdeglobals
ls .config/kdeconnect
vi .config/kdeconnect/setting.ini
vi .config/qt5ct/qt5ct.conf
ldd $(which kdeconnect-app) | grep Qt6
ldd $(which kdeconnect-app)
strings $(which kdeconnect-app) | grep -i qt
ls .config/Kvantum
vi .config/Kvantum/kvantum.kvconfig
mv .config/qt5ct .dotfiles/nova/.config
mv .config/qt6ct .dotfiles/nova/.config
mv .config/Kvantum .dotfiles/nova/.config/
ls .dotfiles/nova/.config
stow -t ~ nova
vi .config/qt6ct/qt6ct.conf
vi .config/hypr/configs/env.conf
rm -rf .config/qt5ct .config/qt6ct
rm -rf .dotfiles/nova/.config/qt5ct .dotfiles/nova/.config/qt6ct
rm -rf .config/Kvantum
mv .dotfiles/nova/.config/Kvantum .config
ls .config
systemupdate
which nix
la /
tailscaled 
cd .nix-profile
cd etc
cd systemd
which mpd
systemctl start mpd
mpd
mpd --help
mpd --kill
cd system
systemctl start docker
ls ~/.config/systemd/user
systemctl --user start kdeconnect.service
systemctl --user enable kdeconnect.service
tailscaled
cd .nix-profile/etc/systemd/system
sudo systemctl start /home/nova/.nix-profile/etc/systemd/system/mpd.service
ln -s .nix-profile/etc/systemd/system/mpd.service .config/systemd/user
chmod +x .config/systemd/user/mpd.service
chmod +x .nix-profile/etc/systemd/system/mpd.service
systemctl --user start mpd
systemctl --user start kdeconnect
ls .config/systemd/user/sockets.target.wants
cp .nix-profile/etc/systemd/system/mpd.service .config/systemd/user
la .config/systemd/user
rm .config/systemd/user/mpd.service
la .nix-profile/etc/systemd/system
la 
la /home/nova/.local/state/nix/profiles
ls .config/systemd/user
vi .config/home-manager/home.nix
home-manager news
shutdown now
mkdir modules
cd modules
vi docker.nix
mv modules .config/home-manager
cd .config/home-manager
cd 
cd .docker
rm -rf .docker

mv modules modules
mv modules/docker.nix modules/default.nix
ls modules
systemctl status docker
nix profile uninstall system-manger
nix profile help
nix profile --help
nix profile remove system-manger
nix profile remove github:numtide/system-manager
nix profile remove packages.x86_64-linux.default\

nix profile remove system-manager\

nix profile list\

pacman -Ss system-manager
paru -Ss system-manager
nix profile install 'github:numtide/system-manager'
which system-manager
vi flake.nix
which docker
systemctl status docker.service
docker ps
docker run hello-world
docker --version
vi modules/default.nix
systemctl status tailscaled
sudo tailscale info
sudo tailscale --help
sudo tailscale show
sudo tailscale netcheck
sudo system-manager switch --flake .
sudo system-manager switch --flake ./.config/home-manager
systemctl disable tailscaled.service
systemctl stop tailscaled.service
systemctl enable tailscaled.service
vi .config/home-manager/modules/default.nix
sudo system-manager switch --flake ~/.config/home-manager
sudo ls ~/
vi .config/zsh/aliases
systemctl start tailscaled.service
systemctl status tailscaled.service
sudo tailscale up
sudo tailscale dow
pacman -Ss python-gpustat
pacman -Ss python gpustat
pacman -Ss gpustat
paru -Ss python-gpustat
gpustat 
gpustat  --debug
find /usr -name libnvidia-ml.so
sudo gpustat
export LD_LIBRARY_PATH=/usr/lib:$LD_LIBRARY_PATH
python3 -m gpustat
bash
gpustat
sudo systemctl stop tailscaled
sudo systemctl start tailscaled
sudo systemctl status tailscaled
sudo -e /system.yaml
systemctl list-units --type=service --state=active
systemctl list-units --type=service
reboot
lsmod
lsmod | grep "ntsync"
htop
alias
servicesup
nano
pacman -Ss freetype
pacman -Q python
which python
which python3
python3 version
python3 --version
python3 -m pyinstallr
pyinstaller --version
python3 -m pyinstaller
cd todo
vi pyproject.toml
python3.12 --version
whcih python3.12
which python3.12
la .vev/bin
ls .local/share/uv
rm -rf .local/share/uv/python/cpython*
ls .local/share/uv/python
cd Code
ls ~/.local/share/uv/python
ls .venv/bin
la .venv/bin
pyinstaller
which pyinstaller
python -m pyinstaller
python -m 
which pip
pyinstaller 
pip install pyinstaller
uv pip install debugpy
pip list
uv remove debugpy
uv uninstall debugpy
uv pip uninstall debugpy
python3 -m venv .venv
pip --version
debugpy
vi main.py
vi .config/nvim/lua/lang/python_debug.lua
mkdir test
uv init
uv venv
cd test
pip install debugpy
uv add debugpy
cd ..
rm -rf test
ls temp
ls develop
ls image_recognizer
rm -rf package_manager
ls
which uv
clear
cd
vi .config/home-manager/packages.nix
gadd
home-manager switch
vi .config/home-manager/flake.nix
cd .dotfiles
